#panel.grid.major=element_blank(),
#panel.grid.minor=element_blank(),
#plot.background=element_blank(),
plot.margin = unit(c(0,0,0,0), units = "cm"))
elevation_plot_no_legend <- elevation_plot +
theme(legend.position="none",
plot.margin = unit(c(0,0,0,0), units = "cm"))
elevation_plot_legend <- cowplot::get_legend(elevation_plot)
elevation_plot
strain_pops <- dplyr::filter(long_admix_pops, frac_cluster == max_frac) %>%
dplyr::rename(strain=samples)
isolation_info <- df %>%
#dplyr::filter(reference_strain == 1)%>%
dplyr::select(strain = isotype, long = longitude, lat = latitude, state, country)%>%
dplyr::filter(lat != "None")%>%
dplyr::left_join(strain_pops,.,by="strain")%>%
dplyr::filter(!is.na(lat)) %>%
dplyr::distinct(strain, long, lat, .keep_all = TRUE)
isolation_info$lat <- as.numeric(isolation_info$lat)
isolation_info$long <- as.numeric(isolation_info$long)
dev.off()
world <- map_data("world")
world <- world[world$region != "Antarctica",] # intercourse antarctica
world_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_label_repel(aes(long, lat, label = strain, fill = cluster),
data=dplyr::filter(isolation_info, state == "Hawaii"),
fontface = 'bold', color = 'white',
segment.color = 'cyan')+
theme(legend.position = "none")+
coord_quickmap(xlim = c(-160,-155), ylim = c(19,22.3)) # coord_quickmap keeps correct aspect ratio
world_plot
dev.off()
world <- map_data("world")
world <- world[world$region != "Antarctica",] # intercourse antarctica
world_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_label_repel(aes(long, lat, label = strain, fill = cluster),
data=dplyr::filter(isolation_info, state == "Hawaii"),
fontface = 'bold', color = 'white',
segment.color = 'cyan')+
theme(legend.position = "none")+
coord_quickmap(xlim = c(-160,-155), ylim = c(19,22.3)) # coord_quickmap keeps correct aspect ratio
world_plot
full_isolation_info <- df %>%
#dplyr::filter(reference_strain == 1) %>%
dplyr::select(isotype, long = longitude, lat = latitude, state, country) %>%
dplyr::filter(lat != "None") %>%
dplyr::left_join(.,admix,by="isotype") %>%
dplyr::distinct(isotype, long, lat, .keep_all = TRUE) %>%
dplyr::filter(!is.na(pop_assignment))
full_world_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::filter(pop_assignment != "C"),
shape = 21, size = 3) +
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::filter(pop_assignment == "C"),
shape = 21, size = 3) +
theme(legend.position = "none") +
coord_quickmap()
full_world_plot
library(maps)
library(geosphere)
library(FSA)
library(geonames)
full_isolation_info <- df %>%
#dplyr::filter(reference_strain == 1) %>%
dplyr::select(isotype, long = longitude, lat = latitude, state, country) %>%
dplyr::filter(lat != "None") %>%
dplyr::left_join(.,admix,by="isotype") %>%
dplyr::distinct(isotype, long, lat, .keep_all = TRUE) %>%
dplyr::filter(!is.na(pop_assignment))
View(full_isolation_info)
full_world_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::filter(pop_assignment != "C"),
shape = 21, size = 3) +
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::filter(pop_assignment == "C"),
shape = 21, size = 3) +
theme(legend.position = "none") +
coord_quickmap()
?geom_map
library(ggplot2)
strain_pops <- dplyr::filter(long_admix_pops, frac_cluster == max_frac) %>%
dplyr::rename(strain=samples)
isolation_info <- df %>%
#dplyr::filter(reference_strain == 1)%>%
dplyr::select(strain = isotype, long = longitude, lat = latitude, state, country)%>%
dplyr::filter(lat != "None")%>%
dplyr::left_join(strain_pops,.,by="strain")%>%
dplyr::filter(!is.na(lat)) %>%
dplyr::distinct(strain, long, lat, .keep_all = TRUE)
isolation_info$lat <- as.numeric(isolation_info$lat)
isolation_info$long <- as.numeric(isolation_info$long)
dev.off()
world <- map_data("world")
world <- world[world$region != "Antarctica",] # intercourse antarctica
world_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_label_repel(aes(long, lat, label = strain, fill = cluster),
data=dplyr::filter(isolation_info, state == "Hawaii"),
fontface = 'bold', color = 'white',
segment.color = 'cyan')+
theme(legend.position = "none")+
coord_quickmap(xlim = c(-160,-155), ylim = c(19,22.3)) # coord_quickmap keeps correct aspect ratio
world_plot
ggsave(world_plot, filename = "plots/K12_HW_MAP_Admix.pdf",
height = 10,
width = 10)
full_isolation_info <- df %>%
#dplyr::filter(reference_strain == 1) %>%
dplyr::select(isotype, long = longitude, lat = latitude, state, country) %>%
dplyr::filter(lat != "None") %>%
dplyr::left_join(.,admix,by="isotype") %>%
dplyr::distinct(isotype, long, lat, .keep_all = TRUE) %>%
dplyr::filter(!is.na(pop_assignment))
full_world_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::filter(pop_assignment != "C"),
shape = 21, size = 3) +
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::filter(pop_assignment == "C"),
shape = 21, size = 3) +
theme(legend.position = "none") +
coord_quickmap()
ggsave(full_world_plot, filename = "plots/K12_world_MAP_Admix.pdf", useDingbats = F,
height = 7.5,
width = 7.5)
euro_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::mutate(pop_assignment = factor(pop_assignment, level = c("A", "B", "D", "E", "C", "G", "F"))) %>%
dplyr::arrange(pop_assignment),
shape = 21, size = 2) +
theme(legend.position = "none") +
coord_quickmap(xlim = c(-10, 39), ylim = c(35, 71))
ggsave(euro_plot, filename = "plots/K12_euro_MAP_Admix.pdf", useDingbats = F,
height = 3,
width = 3)
euro_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::mutate(pop_assignment = factor(pop_assignment, level = c("A", "D", "F", "G", "H", "I",
"J", "L", "B", "C", "E", "K"))) %>%
dplyr::arrange(pop_assignment),
shape = 21, size = 2) +
theme(legend.position = "none") +
coord_quickmap(xlim = c(-10, 39), ylim = c(35, 71))
ggsave(euro_plot, filename = "plots/K12_euro_MAP_Admix.pdf", useDingbats = F,
height = 3,
width = 3)
full_world_plot <- ggplot()+ geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="black", fill="#E6E6E6", size=0.25)+
scale_fill_manual(values = ancestry.colours,name = "Population")+
theme_map()+
geom_point(aes(long, lat, fill = pop_assignment),
data=full_isolation_info %>%
dplyr::mutate(pop_assignment = factor(pop_assignment, level = c("A", "D", "F", "G", "H", "I",
"J", "L", "B", "C", "E", "K"))) %>%
dplyr::arrange(pop_assignment),
shape = 21, size = 3) +
theme(legend.position = "none") +
coord_quickmap()
ggsave(full_world_plot, filename = "plots/K12_world_MAP_Admix.pdf", useDingbats = F,
height = 7.5,
width = 7.5)
library(tidyverse)
library(cowplot)
library(geonames)
library(viridis)
library(ggrepel)
library(maps)
library(geosphere)
library(FSA)
library(tidyverse)
library(cowplot)
library(geonames)
library(viridis)
library(ggrepel)
library(maps)
library(geosphere)
library(FSA)
library(ggplot2)
filter_box <- function(longitude, latitude, coords) {
between(longitude, coords[1], coords[3]) &
between(latitude, coords[2], coords[4]) &
!is.na(longitude)
}
scale_this <- function(x){
(x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE)
}
ancestry.colours <- c("A"="gold2", "B"="plum4","C"= "darkorange1",
"D"="lightskyblue2", "E"="firebrick","F"= "burlywood3", "G"="gray51",
"H"="springgreen4", "I"="lightpink2", "J"="deepskyblue4", "WHOLE_POPULATION"="black",
"K"="mediumpurple4","L"= "orange","M"= "maroon","N"= "yellow3","O"= "brown4",
"P"="yellow4", "Q"="sienna4", "R"="chocolate", "S"="gray19")
island_palette <- c("Kauai" = "#E69F00",
"Oahu" = "#56B4E9",
"Molokai" = "#009E73",
"Maui" = "#F0E442",
"Big Island" = "#D55E00")
substrate_palette <- c("Leaf litter" = "#E68FAC",
"Fruit/nut/veg" = "#0067A5",
"Flower" = "#DCD300",
"Fungus" = "#604E97",
"Compost" = "#F6A600",
"Other" = "#B3446C")
strain_islands <- c("XZ1514" = "#E69F00", "XZ1516" = "#E69F00","XZ1513" = "#E69F00","ECA372" = "#E69F00","ECA701" = "#E69F00","XZ1515" = "#E69F00",
"CB4856" = "#56B4E9",
"ECA369" = "#009E73","ECA738" = "#009E73",
"QX1792" = "#0072B2", "QX1794" = "#0072B2", "QX1793" = "#0072B2", "QX1791" = "#0072B2", "ECA740" = "#0072B2", "ECA741" = "#0072B2", "ECA363" = "#0072B2", "ECA743" = "#0072B2", "ECA742" = "#0072B2",
"ECA760" = "#CC79A7","ECA768" = "#CC79A7","ECA777" = "#CC79A7","ECA706" = "#CC79A7","ECA705" = "#CC79A7","ECA703" = "#CC79A7","ECA807" = "#CC79A7","ECA778" = "#CC79A7",
"ECA812" = "#CC79A7","ECA710" = "#CC79A7","ECA744" = "#CC79A7","ECA745" = "#CC79A7","ECA732" = "#CC79A7","ECA733" = "#CC79A7","ECA746" = "#CC79A7","DL238" = "#CC79A7",
"ECA347" = "#CC79A7","ECA730" = "#CC79A7","ECA724" = "#CC79A7","ECA722" = "#CC79A7","ECA189" = "#CC79A7","ECA191" = "#CC79A7","ECA723" = "#CC79A7","ECA712" = "#CC79A7",
"ECA396" = "#CC79A7")
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
load('data/fulcrum/df.Rda')
sample_names <- sort(data.table::fread("data/ANNOTATE_VCF/samples.txt", header = F) %>% dplyr::pull(V1))
hm_hi1 <- cso %>%
dplyr::filter(!is.na(isotype)) %>%
dplyr::select(isotype,
strain,
c_label,
s_label,
substrate,
island,
altitude,
latitude,
longitude,
ambient_temperature,
substrate_temperature,
ambient_humidity,
substrate_moisture)
old_hi_isolates <- googlesheets::gs_key("1V6YHzblaDph01sFDI8YK_fP0H7sVebHQTXypGdiQIjI") %>%
googlesheets::gs_read("WI C. elegans") %>%
dplyr::filter(isotype %in% names(strain_islands) & !(isotype %in% hm_hi1$isotype)) %>%
dplyr::mutate(altitude = as.numeric(NA)) %>%
dplyr::mutate(longitude = as.numeric(longitude),
substrate_temperature = substrate_temp,
ambient_temperature = ambient_temp)
hm_hi2 <- full_join(hm_hi1, old_hi_isolates)
substrate_merge <- c("Fruit",
"Rotting fruit",
"Nut",
"Rotting nut",
"Rotting vegetable")
hm_hi3 <- hm_hi2 %>%
dplyr::ungroup() %>%
dplyr::mutate(substrate = ifelse(substrate %in% substrate_merge, "Fruit/nut/vegetable", substrate)) %>%
dplyr::mutate(substrate = ifelse(substrate %in% c("Rotting fungus"), "Fungus", substrate)) %>%
dplyr::mutate(substrate = ifelse(is.na(substrate), "Other", substrate)) %>%
dplyr::mutate(fixed_substrate = ifelse(substrate == "Fruit/nut/vegetable", "Fruit/nut/veg",
ifelse(substrate == "Rotting flower", "Flower",
ifelse(substrate == "Rotting fungus", "Fungus",
ifelse(substrate %in% c("Rotting wood",
"Rotting bark",
"Soil",
"Grass"),
"Other",substrate))))) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(main_substrate = names(sort(summary(as.factor(fixed_substrate)), decreasing=T))[1]) %>% # find most common factor in group
dplyr::ungroup()
options(geonamesUsername="katiesevans")
options(geonamesHost="api.geonames.org")
hm_hi4 <- hm_hi3 %>%
dplyr::ungroup() %>%
dplyr::rowwise() %>%
dplyr::mutate(altitude = ifelse(is.na(altitude),
geonames::GNsrtm3(latitude, longitude)$srtm3,
altitude)
) %>%
dplyr::ungroup() %>%
dplyr::mutate(altitude = ifelse(isotype %in% c("CB4856", "DL238"), NA, altitude))
hm_hi4$island <- "?"
hm_hi4[filter_box(hm_hi4$longitude, hm_hi4$latitude, c(-158.3617,21.1968,-157.5117,21.7931)), "island"] <- "Oahu"
hm_hi4[filter_box(hm_hi4$longitude, hm_hi4$latitude, c(-159.9362, 21.6523, -159.1782, 22.472)), "island"] <- "Kauai"
hm_hi4[filter_box(hm_hi4$longitude, hm_hi4$latitude, c(-157.327, 21.0328, -156.685, 21.2574)), "island"] <- "Molokai"
hm_hi4[filter_box(hm_hi4$longitude, hm_hi4$latitude, c(-156.7061, 20.4712, -155.9289, 21.0743)), "island"] <- "Maui"
hm_hi4[filter_box(hm_hi4$longitude, hm_hi4$latitude, c(-156.1346, 18.6619, -154.6985, 20.4492)), "island"] <- "Big Island"
hm_hi5 <- hm_hi4 %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(main_island = names(sort(summary(as.factor(island)), decreasing=T))[1]) %>%
dplyr::ungroup()
hm_hi6 <- hm_hi5 %>%
dplyr::group_by(isotype) %>%
dplyr::summarise_if(is.numeric, funs(mean), na.rm = TRUE) %>%
dplyr::select(isotype,
altitude,
ambient_temperature,
substrate_temperature,
ambient_humidity,
substrate_moisture) %>%
dplyr::ungroup()
hm_hi_proc <- full_join(hm_hi5 %>% dplyr::select(isotype, strain, main_island, main_substrate), hm_hi6) %>%
dplyr::distinct(isotype, .keep_all = TRUE) %>%
dplyr::select(-strain) %>%
dplyr::mutate(altitude_s = scale_this(altitude),
ambient_temperature_s = scale_this(ambient_temperature),
substrate_temperature_s = scale_this(substrate_temperature),
ambient_humidity_s = scale_this(ambient_humidity),
substrate_moisture_s = scale_this(substrate_moisture)) %>%
tidyr::gather(trait, value, -isotype)
df <- data.table::fread("data/WI_strain_list.csv")
k = 11
qfile <- as.data.frame(pophelper::readQ("data/ADMIXTURE_LD8_K12/BEST_K/LD_0.8_MAF_0.004.11.Q"))
colnames(qfile) <- LETTERS[1:k]
qfile <- qfile %>%
dplyr::mutate(samples = as.vector(sample_names))
long_admix_pops <- qfile %>%
dplyr::mutate(samples = sample_names) %>%
dplyr::filter(samples %in% names(strain_islands)) %>%
tidyr::gather(cluster, frac_cluster, -samples) %>%
dplyr::group_by(samples) %>%
dplyr::mutate(max_frac = max(frac_cluster)) %>%
dplyr::ungroup() %>%
dplyr::arrange(cluster, max_frac) %>%
dplyr::mutate(samples = factor(samples, levels = unique(samples)))
plot_order <- long_admix_pops %>%
dplyr::filter(frac_cluster == max_frac) %>%
dplyr::arrange(cluster, -max_frac) %>%
dplyr::mutate(samples = factor(samples, levels = unique(samples)))
temp_admix_plot <- long_admix_pops %>%
dplyr::mutate(ordered_samples = factor(samples, levels = plot_order$samples)) %>%
ggplot() +
geom_bar(stat = "identity",
aes(x = ordered_samples,
y = frac_cluster,
fill = cluster)) +
scale_fill_manual(values = ancestry.colours) +
labs(fill = "", x = "", y = "Ancestry") +
theme_bw() +
theme(#axis.text.x=element_blank(),
axis.text.x = element_text(angle = 90),
axis.text.y=element_blank(),
#axis.title.y = element_text(angle = 0, vjust = .5),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
#plot.background=element_blank(),
plot.margin = unit(c(0,0,0,0), units = "cm"))
admix_plot_no_legend <- temp_admix_plot +
theme(legend.position="none",
axis.line=element_blank(),
plot.margin = unit(c(0,0,0,0), units = "cm"))
admix_legend <- cowplot::get_legend(temp_admix_plot)
hi_only_samples <- read.csv(file = "data/fulcrum/hawaii_isotypes.csv")
admix <- data.table::fread("data/ADMIXTURE_LD8_K12/BEST_K/K11_Processed_Ancestry.tsv") %>%
dplyr::rename(isotype = samples) %>%
tidyr::gather(pop, frac_pop, - isotype) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(max_pop_frac = max(frac_pop)) %>%
dplyr::ungroup() %>%
dplyr::arrange(pop, max_pop_frac) %>%
dplyr::mutate(isotype = factor(isotype)) %>%
dplyr::group_by(isotype) %>%
dplyr::mutate(pop_assignment = ifelse(max_pop_frac == frac_pop, pop, NA)) %>%
dplyr::arrange(isotype, pop_assignment) %>%
tidyr::fill(pop_assignment) %>%
tidyr::spread(pop, frac_pop) %>%
dplyr::ungroup() %>%
dplyr::mutate(Hawaiian = ifelse(isotype %in% hi_only_samples$isotype, "TRUE", "FALSE"))
ass_stats <- left_join(hm_hi5, cso %>% dplyr::filter(!is.na(isotype)) %>% dplyr::select(s_label, grid_num)) %>%
dplyr::filter(!is.na(isotype)) %>%
# Filter non-type strains from ECA189 isotype and ECA396 isotype
dplyr::mutate(filter = case_when(
isotype == "ECA189" & strain != "ECA189" ~ T,
isotype == "ECA396" & strain != "ECA396" ~ T)) %>%
dplyr::mutate(filter = ifelse(is.na(filter), F, filter)) %>%
dplyr::filter(filter == F) %>%
# Filter to distinct c_labels for each isotype
dplyr::distinct(c_label, isotype, .keep_all = TRUE)
ass_stats <- left_join(ass_stats, admix) %>%
group_by(c_label) %>%
# make artifical c_label for Hawaiian isotypes collected prior to 2017 trip
dplyr::mutate(c_label2 = as.character(ifelse(is.na(c_label), row_number(), c_label))) %>%
dplyr::ungroup() %>%
dplyr::mutate(c_label = c_label2)
ass_stats_cont <- ass_stats %>%
dplyr::select(lat = latitude, long = longitude,
c_label, grid_num, fixed_substrate, isotype, sub_pop = pop_assignment, altitude,
ambient_temperature, substrate_temperature, ambient_humidity, substrate_moisture) %>%
# Filter for one representative isotype from a c_label
dplyr::distinct(c_label, sub_pop, .keep_all = T) %>%
dplyr::mutate(sub_pop = factor(sub_pop)) %>%
#dplyr::group_by(grid_num) %>%
#dplyr::mutate(remove = ifelse(length))
tidyr::gather(env_par, value, -lat, -long, -c_label, -grid_num, -fixed_substrate, -isotype, -sub_pop)
ass_stats_long <- ass_stats %>%
dplyr::select(lat = latitude, long = longitude,
c_label, grid_num, fixed_substrate, isotype, sub_pop = pop_assignment, altitude,
ambient_temperature, substrate_temperature, ambient_humidity, substrate_moisture) %>%
tidyr::gather(env_par, value, -lat, -long, -c_label, -grid_num, -fixed_substrate, -isotype, -sub_pop) %>%
dplyr::group_by(sub_pop, env_par) %>%
dplyr::mutate(pop_par_mean_full = mean(value, na.rm = T)) %>%
dplyr::ungroup() %>%
dplyr::mutate(id = paste(lat,long,c_label,isotype))
pair <- apply(ass_stats_long %>%
dplyr::filter(env_par == "altitude") %>%
dplyr::distinct(c_label, .keep_all = T), # only need to compare c_labels for stats, not worried about retaining isotype, pop_assignment info
2, combn, m=2)
left_pair <- as.data.frame(pair[ c(TRUE,FALSE), ])
right_pair <- as.data.frame(pair[ !c(TRUE,FALSE), ])
colnames(right_pair) <- paste("r", colnames(right_pair), sep = "_")
dist <- cbind(left_pair,right_pair) %>%
# assign lat and long back to numeric
dplyr::mutate(lat = as.double(as.character(lat)),
long = as.double(as.character(long)),
r_lat = as.double(as.character(r_lat)),
r_long = as.double(as.character(r_long)),
grid_num = as.double(as.character(grid_num)),
r_grid_num = as.double(as.character(r_grid_num)),
gridsect3 = ifelse(grid_num == 3 & r_grid_num == 3, TRUE, FALSE)) %>%
# force dplyr to perform distHaversine function on rows
dplyr::rowwise() %>%
dplyr::mutate(distance = distHaversine(c(long, lat), c(r_long, r_lat)),
under25meters = ifelse(distance < 25, TRUE, FALSE),
under50meters = ifelse(distance < 50, TRUE, FALSE),
under100meters = ifelse(distance < 100, TRUE, FALSE))
ggplot(dist) +
aes(x = distance,  fill = under25meters) +
#geom_point()
geom_histogram(binwidth = 1000)
ggplot(dist) +
aes(x = distance,  fill = under25meters) +
#geom_point()
geom_histogram(binwidth = 1000)
dist_filter <- dist %>%
dplyr::filter(under25meters == TRUE) %>%
dplyr::select(c_label, r_c_label) %>%
tidyr::gather() %>%
dplyr::distinct(value) %>%
dplyr::rename(c_label = value)
ass_stats_cont_dist_filtered_1 <- ass_stats_cont %>%
dplyr::mutate(sub_pop2 = as.factor(ifelse(sub_pop %in% c("A","F","H"), "non_admixed", "Hawaiian Admixed"))) %>%
dplyr::mutate(filter_25m = ifelse(c_label %in% dist_filter$c_label, TRUE, FALSE),
kalopa =filter_box(ass_stats_cont$long, ass_stats_cont$lat, c(-155.454909,20.02578,-155.430115,20.049951)),
volcano_1 =filter_box(ass_stats_cont$long, ass_stats_cont$lat, c(-155.2243537309,19.4221224043,-155.2216236884,19.424155)),
volcano_2 =filter_box(ass_stats_cont$long, ass_stats_cont$lat, c(-155.222287312,19.424165,-155.2195572695,19.4259669944)),
maui = ifelse(isotype %in% c("QX1793", "QX1794"), TRUE, FALSE),
kauai = ifelse(isotype %in% c("XZ1514", "XZ1515", "XZ1516"), TRUE, FALSE),
geo_cluster = case_when(kalopa == T ~ "kalopa",
volcano_1 == T ~ "volcano_1",
volcano_2 == T ~ "volcano_2",
maui == T ~ "maui",
kauai == T ~ "kauai")) %>%
dplyr::group_by(env_par, sub_pop2, geo_cluster, filter_25m) %>%
dplyr::mutate(mean_value_25m = mean(value, na.rm = T)) %>%
dplyr::ungroup() %>%
dplyr::mutate(value_thinned = ifelse(filter_25m == TRUE, mean_value_25m, value))
ass_stats_long <- ass_stats_long %>%
dplyr::mutate(filtered = ifelse(c_label %in% dist_filter$c_label, 0, 1))
ass_stats_cont_dist_filtered <- ass_stats_cont_dist_filtered_1 %>%
dplyr::distinct(env_par, sub_pop2, geo_cluster, value_thinned, .keep_all = T)
Dunn_list_dist_filtered <- list()
for (e in 1:length(unique(ass_stats_cont_dist_filtered$env_par))){
KM_df <- ass_stats_cont_dist_filtered %>%
dplyr::filter(env_par == (unique(ass_stats_cont_dist_filtered$env_par)[e]))
D_test <- dunnTest(KM_df$value_thinned ~ KM_df$sub_pop2, method = "bonferroni")
Dunn_list_dist_filtered[[unique(ass_stats_cont_dist_filtered$env_par)[e]]] <- D_test
}
Dunn_list_dist_filtered
elevation_p <- ggplot(ass_stats_cont_dist_filtered %>% tidyr::spread(env_par, value_thinned)) +
aes(x = sub_pop2, y = altitude) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(x = sub_pop2, y = altitude, fill = sub_pop), width = 0.25, size = 3, shape = 21) +
theme_bw() +
scale_fill_manual(values=c(ancestry.colours)) +
labs(y = "Elevation (m)", x = "") +
theme_bw() +
theme(legend.position="none",
plot.margin = unit(c(0,0,0,0), units = "cm"))
elevation_p
